# Remove these lines if you want to run a local image build
# Otherwise the setup playbook will install the official Ansible images. Versions may
# be selected based on: latest, 1, 1.0, 1.0.0, 1.0.0.123
# by default the base will be used to search for ansible/awx
dockerhub_base: ansible

# Common Docker parameters
awx_task_hostname: awx
awx_web_hostname: awxweb
postgres_data_dir: "~/.awx/pgdocker"
host_port: 80
host_port_ssl: 443
#ssl_certificate=
# Optional key file
#ssl_certificate_key=
docker_compose_dir: "~/.awx/awxcompose"

# Required for Openshift when building the image on your own
# Optional for Openshift if using Dockerhub or another prebuilt registry
# Required for Docker Compose Install if building the image on your own
# Optional for Docker Compose Install if using Dockerhub or another prebuilt registry
# Define if you want the image pushed to a registry. The container definition will also use these images
# docker_registry=172.30.1.1:5000
# docker_registry_repository=awx
# docker_registry_username=developer


# Set pg_hostname if you have an external postgres server, otherwise
# a new postgres service will be created
pg_hostname: "10.10.10.31"
pg_username: awx
# pg_password should be random 10 character alphanumeric string, when postgresql is running on kubernetes
# NB: it's a limitation of the "official" postgres helm chart
pg_password: !vault |
          $ANSIBLE_VAULT;1.2;AES256;lab
          36343761353633623839663461616131333765303064323932616662353633643731653330613662
          6434336365363065386532616130373630636230646235380a346636346161346561333931626434
          33666162646535333934373135633533346432386533636438646333383031653535336632333530
          3830633963626333610a326438373039333264636633323939613532643830363731383937333533
          3431
pg_database: awx
pg_port: 5432
#pg_sslmode=require

# The following variable is only required when using the provided
# containerized postgres deployment on OpenShift
# pg_admin_password=postgrespass

# Use a local distribution build container image for building the AWX package
# This is helpful if you don't want to bother installing the build-time dependencies as
# it is taken care of already.
# NOTE: IMPORTANT: If you are running a mininshift install, using this container might not work
#                  if you are using certain drivers like KVM where the source tree can't be mapped
#                  into the build container.
#                  Thus this setting must be set to False which will trigger a local build. To view the
#                  typical dependencies that you might need to install see:
#                  installer/image_build/files/Dockerfile.sdist
# use_container_for_build=true

# This will create or update a default admin (superuser) account in AWX, if not provided
# then these default values are used
admin_user: superadmin
admin_password: !vault |
          $ANSIBLE_VAULT;1.2;AES256;lab
          61336330373035613435656535326161666630353336386439393363396233393536396666653661
          3437393965383731313938333461333866363736663933390a383332616432633231303730313561
          64353838353864663332626562653230323739393334353663643836313063363661373966306466
          3938643964626336380a656630666362353463333261386239393864313862333637623962393465
          37326663663233343831376563363434653061323138343066323162646539333865

# Whether or not to create preload data for demonstration purposes
create_preload_data: no

# AWX Secret key
# It's *very* important that this stay the same between upgrades or you will lose the ability to decrypt
# your credentials
secret_key: !vault |
          $ANSIBLE_VAULT;1.2;AES256;lab
          37653665386337393361613664316263323039383663623331666263616665353030646230336561
          6538366564373430633136313639663563666332376563350a386161373965373938386139376466
          33353736613332616335303261623635363766363266333130376362303037306231303162326466
          3066616133663130370a623432393363303833396238306465303637373632663837326135633733
          37333466633562616436373935353933333130343030303534623938393837376264613237313339
          30323263383632393939383864613862626465336132356633323235666564353032353465306361
          626630616163313939323937313666663433

# Build AWX with official logos
# Requires cloning awx-logos repo as a sibling of this project.
# Review the trademark guidelines at https://github.com/ansible/awx-logos/blob/master/TRADEMARKS.md
# awx_official=false

# Proxy
#http_proxy=http://proxy:3128
#https_proxy=http://proxy:3128
#no_proxy=mycorp.org

# Container networking configuration
# Set the awx_task and awx_web containers' search domain(s)
#awx_container_search_domains=example.com,ansible.com
# Alternate DNS servers
#awx_alternate_dns_servers="10.1.2.3,10.2.3.4"

# AWX project data folder. If you need access to the location where AWX stores the projects
# it manages from the docker host, you can set this to turn it into a volume for the container.
#project_data_dir=/var/lib/awx/projects

# AWX custom virtual environment folder. Only usable for local install.
#custom_venv_dir=/opt/my-envs/

# CA Trust directory. If you need to provide custom CA certificates, supplying
# this variable causes this directory on the host to be bind mounted over
# /etc/pki/ca-trust in the awx_task and awx_web containers.
# If you are deploying on openshift or kubernetes, set the variable to /etc/pki/ca-trust instead,
# as the awx_web and awx_task containers will not run the `update-ca-trust` command.
#ca_trust_dir=/etc/pki/ca-trust/source/anchors

# Include /etc/nginx/awx_extra.conf
# Note the use of glob pattern for nginx
# which makes include "optional" - i.e. not fail
# if file is absent
#extra_nginx_include="/etc/nginx/awx_extra[.]conf"

# Docker compose explicit subnet. Set to avoid overlapping your existing LAN networks.
#docker_compose_subnet="172.17.0.1/16"
#
# Allow for different docker logging drivers
# By Default; the logger will be json-file, however you can override
# that by uncommenting the docker_logger below.
# Be aware that journald may rate limit your log messages if you choose it.
# See: https://docs.docker.com/config/containers/logging/configure/
# docker_logger=journald
#

# Add extra hosts to docker compose file. This might be necessary to
# sneak in servernames. For exmaple for DMZ self-signed CA certificates.
# Equivialent to using the --add-host parameter with "docker run".
#docker_compose_extra_hosts="otherserver.local:192.168.0.1,ldap-server.local:192.168.0.2"
